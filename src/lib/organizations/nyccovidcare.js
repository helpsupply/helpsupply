const RequestKinds = require('./kinds');

function always(resp) {
  return (request) => {
    return resp;
  };
}

function get_user_field(name) {
  return (request, user) => {
    return user[name];
  };
}

const FIELD_MAP = {
  'Submitted On': (request) => '' + new Date(),
  Name: (request, user) => {
    return user.firstName + ' ' + user.lastName;
  },
  Email: get_user_field('email'),
  Phone: get_user_field('phone'),
  'Whats your preferred form of contact': (request, user) => {
    return {
      phone: ['Phone'],
      email: ['Email'],
    }[user.contactPreference];
  },
  'When is a good time to reach you Check all that apply': (request) =>
    request.date + ' ' + request.time,
  'What kind of volunteer would you be most interested in speaking with': (
    request,
  ) => {
    return {
      licensed: 'Licensed Mental Health Professional',
      spiritual: 'Spiritual Care Provider',
      coach: 'Personal/Life Coach',
      stress: 'Stress-Reduction Expert',
      healing: 'Healing Arts Practitioner',
      any: "I don't have a preference",
    }[request.type];
  },
  'Anything else about your identity or your situation that you would like us to know': (
    request,
    user,
  ) => {
    return `
This is a request from Help Supply

Recurring? ${request.recurring ? 'Yes' : 'No'}
Language Preference? ${user.languagePreference}
Urgency? ${
      {
        immediate: "Immediately, I'm in crisis",
        soon: 'In the next few days',
        later: "I'm okay for now, but am worried I won't be soon",
      }[request.urgency]
    }

Other Notes:
${request.additionalInfo}

Reference ID:
https://help.supply/r/${request.id}
	  `;
  },
  'I understand this network connects individuals and is not a professional therapeutic organization': always(
    'Yes',
  ),
};

const NYCCovidCareMetadata = {
  id: 'nyccovidcare',
  Organization: 'NYC Covid Care',
  Website: 'www.nyccovidcare.org',
  Email: 'nyccovidcare@gmail.com',
  Kind: RequestKinds.MENTALHEALTH,
  ZipCodes: [
    '10097',
    '10096',
    '10081',
    '10080',
    '10075',
    '10069',
    '10065',
    '10055',
    '10048',
    '10047',
    '10045',
    '10044',
    '10043',
    '10041',
    '10040',
    '10039',
    '10038',
    '10037',
    '10036',
    '10035',
    '10034',
    '10033',
    '10032',
    '10031',
    '10030',
    '10029',
    '10028',
    '10027',
    '10026',
    '10025',
    '10024',
    '10023',
    '10022',
    '10021',
    '10020',
    '10019',
    '10018',
    '10017',
    '10016',
    '10014',
    '10013',
    '10012',
    '10011',
    '10010',
    '10009',
    '10007',
    '10006',
    '10005',
    '10004',
    '10003',
    '10002',
    '10001',
    '08879',
    '08863',
    '08861',
    '08859',
    '08840',
    '08837',
    '08832',
    '08830',
    '08820',
    '07981',
    '07974',
    '07961',
    '07940',
    '07936',
    '07932',
    '07928',
    '07922',
    '07901',
    '07760',
    '07758',
    '07748',
    '07747',
    '07737',
    '07735',
    '07734',
    '07733',
    '07732',
    '07730',
    '07721',
    '07718',
    '07716',
    '07704',
    '07701',
    '07677',
    '07676',
    '07675',
    '07670',
    '07666',
    '07663',
    '07662',
    '07661',
    '07660',
    '07657',
    '07656',
    '07652',
    '07650',
    '07649',
    '07648',
    '07647',
    '07646',
    '07645',
    '07644',
    '07643',
    '07642',
    '07641',
    '07640',
    '07632',
    '07631',
    '07630',
    '07628',
    '07627',
    '07626',
    '07624',
    '07621',
    '07620',
    '07608',
    '07607',
    '07606',
    '07605',
    '07604',
    '07603',
    '07601',
    '07524',
    '07522',
    '07514',
    '07513',
    '07512',
    '07508',
    '07506',
    '07505',
    '07504',
    '07503',
    '07502',
    '07501',
    '07481',
    '07470',
    '07463',
    '07458',
    '07452',
    '07450',
    '07440',
    '07432',
    '07424',
    '07423',
    '07417',
    '07410',
    '07407',
    '07401',
    '07311',
    '07310',
    '07307',
    '07306',
    '07305',
    '07304',
    '07302',
    '07208',
    '07206',
    '07205',
    '07204',
    '07203',
    '07202',
    '07201',
    '07114',
    '07112',
    '07111',
    '07110',
    '07109',
    '07108',
    '07107',
    '07106',
    '07105',
    '07104',
    '07103',
    '07102',
    '07095',
    '07094',
    '07093',
    '07092',
    '07090',
    '07088',
    '07087',
    '07086',
    '07083',
    '07081',
    '07080',
    '07079',
    '07078',
    '07077',
    '07076',
    '07075',
    '07074',
    '07073',
    '07072',
    '07071',
    '07070',
    '07068',
    '07067',
    '07066',
    '07065',
    '07064',
    '07062',
    '07060',
    '07058',
    '07057',
    '07055',
    '07052',
    '07050',
    '07047',
    '07045',
    '07044',
    '07043',
    '07042',
    '07041',
    '07040',
    '07039',
    '07036',
    '07035',
    '07033',
    '07032',
    '07031',
    '07030',
    '07029',
    '07028',
    '07027',
    '07026',
    '07024',
    '07023',
    '07022',
    '07021',
    '07020',
    '07018',
    '07017',
    '07016',
    '07014',
    '07013',
    '07012',
    '07011',
    '07010',
    '07009',
    '07008',
    '07006',
    '07004',
    '07003',
    '07002',
    '07001',
    '00083',
    '11801',
    '11793',
    '11756',
    '11753',
    '11732',
    '11710',
    '11697',
    '11694',
    '11693',
    '11692',
    '11691',
    '11598',
    '11596',
    '11590',
    '11581',
    '11580',
    '11579',
    '11577',
    '11576',
    '11575',
    '11572',
    '11570',
    '11569',
    '11568',
    '11566',
    '11565',
    '11563',
    '11561',
    '11560',
    '11559',
    '11558',
    '11557',
    '11556',
    '11554',
    '11553',
    '11552',
    '11550',
    '11549',
    '11548',
    '11547',
    '11545',
    '11542',
    '11530',
    '11520',
    '11518',
    '11516',
    '11514',
    '11510',
    '11509',
    '11507',
    '11501',
    '11451',
    '11436',
    '11435',
    '11434',
    '11433',
    '11432',
    '11430',
    '11429',
    '11428',
    '11427',
    '11426',
    '11425',
    '11424',
    '11423',
    '11422',
    '11421',
    '11420',
    '11419',
    '11418',
    '11417',
    '11416',
    '11415',
    '11414',
    '11413',
    '11412',
    '11411',
    '11385',
    '11379',
    '11378',
    '11377',
    '11375',
    '11374',
    '11373',
    '11372',
    '11371',
    '11370',
    '11369',
    '11368',
    '11367',
    '11366',
    '11365',
    '11364',
    '11363',
    '11362',
    '11361',
    '11360',
    '11359',
    '11358',
    '11357',
    '11356',
    '11355',
    '11354',
    '11251',
    '11249',
    '11239',
    '11238',
    '11237',
    '11236',
    '11235',
    '11234',
    '11233',
    '11232',
    '11231',
    '11230',
    '11229',
    '11228',
    '11226',
    '11225',
    '11224',
    '11223',
    '11222',
    '11221',
    '11220',
    '11219',
    '11218',
    '11217',
    '11216',
    '11215',
    '11214',
    '11213',
    '11212',
    '11211',
    '11210',
    '11209',
    '11208',
    '11207',
    '11206',
    '11205',
    '11204',
    '11203',
    '11201',
    '11109',
    '11106',
    '11105',
    '11104',
    '11103',
    '11102',
    '11101',
    '11096',
    '11050',
    '11042',
    '11040',
    '11030',
    '11024',
    '11023',
    '11021',
    '11020',
    '11010',
    '11005',
    '11004',
    '11003',
    '11001',
    '10983',
    '10976',
    '10968',
    '10964',
    '10962',
    '10805',
    '10804',
    '10803',
    '10801',
    '10710',
    '10709',
    '10708',
    '10707',
    '10706',
    '10705',
    '10704',
    '10703',
    '10701',
    '10606',
    '10583',
    '10580',
    '10553',
    '10552',
    '10550',
    '10543',
    '10538',
    '10533',
    '10530',
    '10528',
    '10522',
    '10503',
    '10502',
    '10475',
    '10474',
    '10473',
    '10472',
    '10471',
    '10470',
    '10469',
    '10468',
    '10467',
    '10466',
    '10465',
    '10464',
    '10463',
    '10462',
    '10461',
    '10460',
    '10459',
    '10458',
    '10457',
    '10456',
    '10455',
    '10454',
    '10453',
    '10452',
    '10451',
    '10314',
    '10312',
    '10311',
    '10310',
    '10309',
    '10308',
    '10307',
    '10306',
    '10305',
    '10304',
    '10303',
    '10302',
    '10301',
    '10286',
    '10285',
    '10282',
    '10281',
    '10280',
    '10279',
    '10278',
    '10275',
    '10271',
    '10270',
    '10265',
    '10260',
    '10259',
    '10203',
    '10199',
    '10196',
    '10178',
    '10177',
    '10176',
    '10175',
    '10174',
    '10173',
    '10172',
    '10171',
    '10170',
    '10169',
    '10168',
    '10167',
    '10166',
    '10165',
    '10162',
    '10158',
    '10155',
    '10154',
    '10153',
    '10152',
    '10151',
    '10128',
    '10123',
    '10122',
    '10121',
    '10120',
    '10119',
    '10118',
    '10115',
    '10112',
    '10111',
    '10110',
    '10107',
    '10106',
    '10105',
    '10104',
    '10103',
  ],
  // Called by the backend when a request is saved with
  // organization = 'manyc'
  DeliverRequest: async (backend, request, user) => {
    // Get the Webhook from the Database
    let url = await backend.getWebhookForOrg('nyccovidcare');

    // We actually need to send the request multiple times per child
    let payload = {};
    for (const field in FIELD_MAP) {
      payload[field] = FIELD_MAP[field](request, user);
    }

    payload.sheet = 'Fresh Requests';

    // Send the request
    await backend.postWebhook(url, payload);
  },
  // Called by the backend when MANYC pushes an update
  // about a request to our webhook
  HandleUpdate: (row) => {
    // If row is acknowledged, send an email/text to
    // the end user
  },
};

export default NYCCovidCareMetadata;
